/*
Composition (Tight Coupling)

Definition:
Composition represents a strong (tight) relationship where one class owns another class.
If the owner object is destroyed, the contained object is also destroyed.

Example:
A Human has-a Heart.
If the Human object is destroyed, the Heart doesnâ€™t exist separately.

âœ… Example Code:
*/
class Heart {
    void pump() {
        System.out.println("Heart is pumping blood...");
    }
}

class Human {
    private Heart heart;

    // Composition: Human creates and owns the Heart
    public Human() {
        heart = new Heart();
    }

    void live() {
        heart.pump();
        System.out.println("Human is alive!");
    }
}

public class CompositionExample {
    public static void main(String[] args) {
        Human human = new Human();
        human.live();
    }
}


ðŸ§  Explanation:

The Human creates the Heart inside itself â†’ tightly coupled.

If the Human is gone, the Heart cannot exist independently.
